name: Deploy to Server

on:
  push:
    branches:
      - main  # Trigger deployment when code is pushed to the "main" branch (Staging)
  workflow_dispatch:  # Allow manual triggering (for Production)

jobs:
  deploy-staging:
    name: Deploy Project to Staging
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.5'  # Match Node.js version with your local environment

      # Step 3: Export Environment Variables
      - name: Export Environment Variables
        run: |
          echo "CONVEX_DEPLOYMENT=${{ secrets.CONVEX_DEPLOYMENT }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_CONVEX_URL=${{ secrets.NEXT_PUBLIC_CONVEX_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_APP_URL=${{ secrets.NEXT_PUBLIC_APP_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" >> $GITHUB_ENV
          echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" >> $GITHUB_ENV
          echo "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" >> $GITHUB_ENV

      # Step 4: Install Dependencies
      - name: Install dependencies
        run: npm install

      # Step 5: Build Project
      - name: Build project
        run: npm run build  # Matches your local build command

      # Step 6: Deploy to Staging Server via SSH
      - name: Deploy to Staging Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_KEY }}
          source: ".,!node_modules"  # Transfer all files except node_modules
          target: "/var/www/alignometrix-staging"  # Staging directory

      # Step 7: Restart Staging Application on Server
      - name: Restart Staging Application on Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /var/www/alignometrix-staging
            npm install --production
            pm2 restart alignometrix-staging || pm2 start npm --name "alignometrix-staging" -- start

  deploy-production:
    name: Deploy Project to Production
    runs-on: ubuntu-latest
    needs: deploy-staging  # Ensure staging deploy is successful first
    if: github.event_name == 'workflow_dispatch'

    steps:
      # Step 1: Sync Staging to Production
      - name: Sync Staging to Production Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            rsync -av --delete /var/www/alignometrix-staging/ /var/www/alignometrix-production/

      # Step 2: Restart Production Application on Server
      - name: Restart Production Application on Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: root
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /var/www/alignometrix-production
            npm install --production
            pm2 restart alignometrix || pm2 start npm --name "alignometrix" -- start